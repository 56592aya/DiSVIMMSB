        - # This program simulates the motion of stars in a 1D universe.
        -  
        - 
        - # Information about a Star in a 1D universe
        - type Star
        -     mass # Mass
        -     pos  # Coordinate
        -     vel  # Velocity
        - end
        - 
        - # Global variable univ is a Vector{Star}, declared much later.
        - 
        - # Return array of forces acting on each star in univ
        - function compute_force()
        -     n = length(univ)
   940525     force = zeros(n)
326758432     for i=1:n, j=1:n
961040646         force[i] += (univ[i].mass*univ[j].mass)*sign(univ[j].pos-univ[i].pos)
        -     end
        0     force
        - end
        - 
        - # Update state of each star in univ
        - function apply_force!(force, dt)
        -     for i=1:length(univ)
  9775117         acc = force[i]*dt/univ[i].mass
 12812800         univ[i].pos += (univ[i].vel + 0.5*acc*dt)*dt
  6406400         univ[i].vel += acc*dt
        -     end
        - end
        - 
        - # Simulate one time unit using m steps
        - function step(m)
        -     dt = 1/m
 17763115     for k=1:m
        0         force = compute_force()
        0         apply_force!(force, dt)
        -     end
        - end
        - 
        - # DO NOT CHANGE CODE BELOW THIS LINE ------------------
        - 
        - # Make runs repeatable
        - srand(42)
        - 
        - # A universe of stars with random initial conditions
        - univ = Star[Star(rand(),rand(),rand()) for i=1:100]
        - 
        - @time step(1)
        - @time step(1000)
        - println(univ[50])
        - 
        - 
